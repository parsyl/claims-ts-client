/* tslint:disable */
/* eslint-disable */
/**
 * Claims API
 * API for managing insurance claims and ECF transactions.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ClaimMovementAmountItem } from './ClaimMovementAmountItem';
import {
    ClaimMovementAmountItemFromJSON,
    ClaimMovementAmountItemFromJSONTyped,
    ClaimMovementAmountItemToJSON,
} from './ClaimMovementAmountItem';

/**
 * 
 * @export
 * @interface ClaimTransactionFinancial
 */
export interface ClaimTransactionFinancial {
    /**
     * 
     * @type {string}
     * @memberof ClaimTransactionFinancial
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof ClaimTransactionFinancial
     */
    transactionId: string;
    /**
     * ISO currency code
     * @type {string}
     * @memberof ClaimTransactionFinancial
     */
    currency: string;
    /**
     * Service provider original split references
     * @type {Array<string>}
     * @memberof ClaimTransactionFinancial
     */
    serviceProviderOriginalSplitReference?: Array<string>;
    /**
     * Settlement amount
     * @type {number}
     * @memberof ClaimTransactionFinancial
     */
    settlementAmount?: number;
    /**
     * Exchange rate
     * @type {number}
     * @memberof ClaimTransactionFinancial
     */
    exchangeRate?: number;
    /**
     * Target currency for exchange rate conversion
     * @type {string}
     * @memberof ClaimTransactionFinancial
     */
    targetCurrency?: string;
    /**
     * 
     * @type {Date}
     * @memberof ClaimTransactionFinancial
     */
    createdAt: Date;
    /**
     * Individual amount items within this currency group
     * @type {Array<ClaimMovementAmountItem>}
     * @memberof ClaimTransactionFinancial
     */
    amountItems?: Array<ClaimMovementAmountItem>;
}

/**
 * Check if a given object implements the ClaimTransactionFinancial interface.
 */
export function instanceOfClaimTransactionFinancial(value: object): boolean {
    if (!('id' in value)) return false;
    if (!('transactionId' in value)) return false;
    if (!('currency' in value)) return false;
    if (!('createdAt' in value)) return false;
    return true;
}

export function ClaimTransactionFinancialFromJSON(json: any): ClaimTransactionFinancial {
    return ClaimTransactionFinancialFromJSONTyped(json, false);
}

export function ClaimTransactionFinancialFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClaimTransactionFinancial {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'transactionId': json['transaction_id'],
        'currency': json['currency'],
        'serviceProviderOriginalSplitReference': json['service_provider_original_split_reference'] == null ? undefined : json['service_provider_original_split_reference'],
        'settlementAmount': json['settlement_amount'] == null ? undefined : json['settlement_amount'],
        'exchangeRate': json['exchange_rate'] == null ? undefined : json['exchange_rate'],
        'targetCurrency': json['target_currency'] == null ? undefined : json['target_currency'],
        'createdAt': (new Date(json['created_at'])),
        'amountItems': json['amount_items'] == null ? undefined : ((json['amount_items'] as Array<any>).map(ClaimMovementAmountItemFromJSON)),
    };
}

export function ClaimTransactionFinancialToJSON(value?: ClaimTransactionFinancial | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'transaction_id': value['transactionId'],
        'currency': value['currency'],
        'service_provider_original_split_reference': value['serviceProviderOriginalSplitReference'],
        'settlement_amount': value['settlementAmount'],
        'exchange_rate': value['exchangeRate'],
        'target_currency': value['targetCurrency'],
        'created_at': ((value['createdAt']).toISOString()),
        'amount_items': value['amountItems'] == null ? undefined : ((value['amountItems'] as Array<any>).map(ClaimMovementAmountItemToJSON)),
    };
}

