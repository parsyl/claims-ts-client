/* tslint:disable */
/* eslint-disable */
/**
 * Claims API
 * API for managing insurance claims and ECF transactions.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ClaimTransactionUpdate
 */
export interface ClaimTransactionUpdate {
    /**
     * ECF Service Provider Reference
     * @type {string}
     * @memberof ClaimTransactionUpdate
     */
    serviceProviderReference?: string;
    /**
     * ECF Creation Date
     * @type {Date}
     * @memberof ClaimTransactionUpdate
     */
    creationDate?: Date;
    /**
     * ECF Message Sequence Number
     * @type {number}
     * @memberof ClaimTransactionUpdate
     */
    messageSequenceNumber?: number;
    /**
     * ECF Action Code (A/R/U/D/X)
     * @type {string}
     * @memberof ClaimTransactionUpdate
     */
    explanation?: string;
    /**
     * ECF Claim Advice Indicator
     * @type {string}
     * @memberof ClaimTransactionUpdate
     */
    claimAdviceIndicator?: string;
    /**
     * ECF Advised to Leading Reinsurer Date
     * @type {Date}
     * @memberof ClaimTransactionUpdate
     */
    advisedToLeadingReinsurerDate?: Date;
    /**
     * ECF As Of Date
     * @type {Date}
     * @memberof ClaimTransactionUpdate
     */
    asOfDate?: Date;
    /**
     * ECF Action Participant Type
     * @type {string}
     * @memberof ClaimTransactionUpdate
     */
    actionParticipantType?: string;
    /**
     * ECF Action Participant
     * @type {string}
     * @memberof ClaimTransactionUpdate
     */
    actionParticipant?: string;
    /**
     * ECF Response Code
     * @type {string}
     * @memberof ClaimTransactionUpdate
     */
    responseCode?: string;
    /**
     * ECF Transaction Reference (TR)
     * @type {string}
     * @memberof ClaimTransactionUpdate
     */
    transactionReference?: string;
    /**
     * ECF Unique Claim Reference
     * @type {string}
     * @memberof ClaimTransactionUpdate
     */
    ucr?: string;
    /**
     * ECF Unique Market Reference
     * @type {string}
     * @memberof ClaimTransactionUpdate
     */
    umr?: string;
    /**
     * ECF Insurer Risk Reference
     * @type {string}
     * @memberof ClaimTransactionUpdate
     */
    insurerRiskReference?: string;
    /**
     * ECF Insurer Risk Reference 2
     * @type {string}
     * @memberof ClaimTransactionUpdate
     */
    insurerRiskReference2?: string;
    /**
     * ECF Loss or Event Name
     * @type {string}
     * @memberof ClaimTransactionUpdate
     */
    lossOrEventName?: string;
    /**
     * ECF Vessel Name
     * @type {string}
     * @memberof ClaimTransactionUpdate
     */
    vesselName?: string;
    /**
     * ECF PCS Reference
     * @type {string}
     * @memberof ClaimTransactionUpdate
     */
    pcsReference?: string;
    /**
     * ECF LCO Catastrophe Reference
     * @type {string}
     * @memberof ClaimTransactionUpdate
     */
    lcoCatastropheReference?: string;
    /**
     * ECF Service Provider Claim Reference
     * @type {string}
     * @memberof ClaimTransactionUpdate
     */
    serviceProviderClaimRef?: string;
    /**
     * ECF Cause of Loss
     * @type {string}
     * @memberof ClaimTransactionUpdate
     */
    causeOfLoss?: string;
    /**
     * ECF Loss Location
     * @type {string}
     * @memberof ClaimTransactionUpdate
     */
    lossLocation?: string;
    /**
     * ECF Loss Details
     * @type {string}
     * @memberof ClaimTransactionUpdate
     */
    lossDetails?: string;
    /**
     * ECF Loss Date Narrative
     * @type {string}
     * @memberof ClaimTransactionUpdate
     */
    lossDateNarrative?: string;
    /**
     * ECF Adjuster Name
     * @type {string}
     * @memberof ClaimTransactionUpdate
     */
    adjusterName?: string;
    /**
     * ECF Adjuster Reference
     * @type {string}
     * @memberof ClaimTransactionUpdate
     */
    adjusterReference?: string;
    /**
     * ECF Lawyer Name
     * @type {string}
     * @memberof ClaimTransactionUpdate
     */
    lawyerName?: string;
    /**
     * ECF Lawyer Reference
     * @type {string}
     * @memberof ClaimTransactionUpdate
     */
    lawyerReference?: string;
    /**
     * ECF Cover Type
     * @type {string}
     * @memberof ClaimTransactionUpdate
     */
    coverType?: string;
    /**
     * ECF Insured Risk or Interest Description
     * @type {string}
     * @memberof ClaimTransactionUpdate
     */
    insuredRiskOrInterestDescription?: string;
    /**
     * ECF Contract Period Start Date
     * @type {Date}
     * @memberof ClaimTransactionUpdate
     */
    contractPeriodStartDate?: Date;
    /**
     * ECF Contract Period End Date
     * @type {Date}
     * @memberof ClaimTransactionUpdate
     */
    contractPeriodEndDate?: Date;
    /**
     * ECF Underwriting Year
     * @type {string}
     * @memberof ClaimTransactionUpdate
     */
    underwritingYear?: string;
    /**
     * ECF Contract Period Description
     * @type {string}
     * @memberof ClaimTransactionUpdate
     */
    contractPeriodDescription?: string;
    /**
     * ECF Insurer Share Percentage
     * @type {number}
     * @memberof ClaimTransactionUpdate
     */
    insurerSharePercentage?: number;
    /**
     * The status of the Lloyd's transaction
     * @type {string}
     * @memberof ClaimTransactionUpdate
     */
    lloydsStatus?: string;
    /**
     * The subclassification on a binder claim transaction
     * @type {string}
     * @memberof ClaimTransactionUpdate
     */
    subClassification?: string;
    /**
     * The date the broker was advised of the claim transaction
     * @type {Date}
     * @memberof ClaimTransactionUpdate
     */
    brokerAdvisedDate?: Date;
    /**
     * Date that the claim transaction was added/circulated/authorised
     * @type {Date}
     * @memberof ClaimTransactionUpdate
     */
    addedCirculatedOrAuthorisedDate?: Date;
    /**
     * Transaction Sub Type
     * @type {string}
     * @memberof ClaimTransactionUpdate
     */
    transactionSubCode?: string;
    /**
     * Settlement indicator for Bordereau and Cash Loss claims
     * @type {boolean}
     * @memberof ClaimTransactionUpdate
     */
    settledIndicator?: boolean;
    /**
     * ECF Claim Line Number
     * @type {string}
     * @memberof ClaimTransactionUpdate
     */
    claimLineNumber?: string;
    /**
     * ECF Lead Claim Reference
     * @type {string}
     * @memberof ClaimTransactionUpdate
     */
    leadClaimReference?: string;
    /**
     * ECF Claim Status
     * @type {string}
     * @memberof ClaimTransactionUpdate
     */
    claimStatus?: string;
    /**
     * ECF Loss Date Qualifier
     * @type {string}
     * @memberof ClaimTransactionUpdate
     */
    lossDateQualifier?: string;
    /**
     * ECF Loss Start Date
     * @type {Date}
     * @memberof ClaimTransactionUpdate
     */
    lossStartDate?: Date;
    /**
     * ECF Loss End Date
     * @type {Date}
     * @memberof ClaimTransactionUpdate
     */
    lossEndDate?: Date;
    /**
     * ECF Claim Type
     * @type {string}
     * @memberof ClaimTransactionUpdate
     */
    claimType?: string;
    /**
     * ECF Claims Scheme
     * @type {string}
     * @memberof ClaimTransactionUpdate
     */
    claimsScheme?: string;
    /**
     * ECF Electronic Claims File Indicator
     * @type {boolean}
     * @memberof ClaimTransactionUpdate
     */
    ecfIndicator?: boolean;
    /**
     * ECF PBS Indicator
     * @type {boolean}
     * @memberof ClaimTransactionUpdate
     */
    pbsIndicator?: boolean;
    /**
     * ECF Triage Category
     * @type {string}
     * @memberof ClaimTransactionUpdate
     */
    triageCategory?: string;
    /**
     * ECF Parallel UCRs
     * @type {Array<string>}
     * @memberof ClaimTransactionUpdate
     */
    parallelUcrs?: Array<string>;
    /**
     * ECF Broker Claim Reference 1
     * @type {string}
     * @memberof ClaimTransactionUpdate
     */
    brokerClaimReference1?: string;
    /**
     * ECF War Indicator
     * @type {boolean}
     * @memberof ClaimTransactionUpdate
     */
    warIndicator?: boolean;
    /**
     * ECF Simultaneous Reinstatement Required
     * @type {boolean}
     * @memberof ClaimTransactionUpdate
     */
    simultaneousReinstatementRequired?: boolean;
    /**
     * XCS To Agree Indicator
     * @type {boolean}
     * @memberof ClaimTransactionUpdate
     */
    xcsToAgreeIndicator?: boolean;
    /**
     * ECF Conflict of Interest Indicator
     * @type {boolean}
     * @memberof ClaimTransactionUpdate
     */
    conflictOfInterestIndicator?: boolean;
    /**
     * ECF Class of Business
     * @type {string}
     * @memberof ClaimTransactionUpdate
     */
    classOfBusiness?: string;
    /**
     * ECF Soft Warnings
     * @type {Array<string>}
     * @memberof ClaimTransactionUpdate
     */
    softWarnings?: Array<string>;
    /**
     * True if this is an error message transaction
     * @type {boolean}
     * @memberof ClaimTransactionUpdate
     */
    transactionError?: boolean;
    /**
     * ECF Additional Information
     * @type {object}
     * @memberof ClaimTransactionUpdate
     */
    additionalInformation?: object;
    /**
     * Transaction sequence number for ordering and backfill
     * @type {string}
     * @memberof ClaimTransactionUpdate
     */
    transactionSequence?: string;
    /**
     * Soft delete flag
     * @type {boolean}
     * @memberof ClaimTransactionUpdate
     */
    isDeleted?: boolean;
}

/**
 * Check if a given object implements the ClaimTransactionUpdate interface.
 */
export function instanceOfClaimTransactionUpdate(value: object): boolean {
    return true;
}

export function ClaimTransactionUpdateFromJSON(json: any): ClaimTransactionUpdate {
    return ClaimTransactionUpdateFromJSONTyped(json, false);
}

export function ClaimTransactionUpdateFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClaimTransactionUpdate {
    if (json == null) {
        return json;
    }
    return {
        
        'serviceProviderReference': json['service_provider_reference'] == null ? undefined : json['service_provider_reference'],
        'creationDate': json['creation_date'] == null ? undefined : (new Date(json['creation_date'])),
        'messageSequenceNumber': json['message_sequence_number'] == null ? undefined : json['message_sequence_number'],
        'explanation': json['explanation'] == null ? undefined : json['explanation'],
        'claimAdviceIndicator': json['claim_advice_indicator'] == null ? undefined : json['claim_advice_indicator'],
        'advisedToLeadingReinsurerDate': json['advised_to_leading_reinsurer_date'] == null ? undefined : (new Date(json['advised_to_leading_reinsurer_date'])),
        'asOfDate': json['as_of_date'] == null ? undefined : (new Date(json['as_of_date'])),
        'actionParticipantType': json['action_participant_type'] == null ? undefined : json['action_participant_type'],
        'actionParticipant': json['action_participant'] == null ? undefined : json['action_participant'],
        'responseCode': json['response_code'] == null ? undefined : json['response_code'],
        'transactionReference': json['transaction_reference'] == null ? undefined : json['transaction_reference'],
        'ucr': json['ucr'] == null ? undefined : json['ucr'],
        'umr': json['umr'] == null ? undefined : json['umr'],
        'insurerRiskReference': json['insurer_risk_reference'] == null ? undefined : json['insurer_risk_reference'],
        'insurerRiskReference2': json['insurer_risk_reference2'] == null ? undefined : json['insurer_risk_reference2'],
        'lossOrEventName': json['loss_or_event_name'] == null ? undefined : json['loss_or_event_name'],
        'vesselName': json['vessel_name'] == null ? undefined : json['vessel_name'],
        'pcsReference': json['pcs_reference'] == null ? undefined : json['pcs_reference'],
        'lcoCatastropheReference': json['lco_catastrophe_reference'] == null ? undefined : json['lco_catastrophe_reference'],
        'serviceProviderClaimRef': json['service_provider_claim_ref'] == null ? undefined : json['service_provider_claim_ref'],
        'causeOfLoss': json['cause_of_loss'] == null ? undefined : json['cause_of_loss'],
        'lossLocation': json['loss_location'] == null ? undefined : json['loss_location'],
        'lossDetails': json['loss_details'] == null ? undefined : json['loss_details'],
        'lossDateNarrative': json['loss_date_narrative'] == null ? undefined : json['loss_date_narrative'],
        'adjusterName': json['adjuster_name'] == null ? undefined : json['adjuster_name'],
        'adjusterReference': json['adjuster_reference'] == null ? undefined : json['adjuster_reference'],
        'lawyerName': json['lawyer_name'] == null ? undefined : json['lawyer_name'],
        'lawyerReference': json['lawyer_reference'] == null ? undefined : json['lawyer_reference'],
        'coverType': json['cover_type'] == null ? undefined : json['cover_type'],
        'insuredRiskOrInterestDescription': json['insured_risk_or_interest_description'] == null ? undefined : json['insured_risk_or_interest_description'],
        'contractPeriodStartDate': json['contract_period_start_date'] == null ? undefined : (new Date(json['contract_period_start_date'])),
        'contractPeriodEndDate': json['contract_period_end_date'] == null ? undefined : (new Date(json['contract_period_end_date'])),
        'underwritingYear': json['underwriting_year'] == null ? undefined : json['underwriting_year'],
        'contractPeriodDescription': json['contract_period_description'] == null ? undefined : json['contract_period_description'],
        'insurerSharePercentage': json['insurer_share_percentage'] == null ? undefined : json['insurer_share_percentage'],
        'lloydsStatus': json['lloyds_status'] == null ? undefined : json['lloyds_status'],
        'subClassification': json['sub_classification'] == null ? undefined : json['sub_classification'],
        'brokerAdvisedDate': json['broker_advised_date'] == null ? undefined : (new Date(json['broker_advised_date'])),
        'addedCirculatedOrAuthorisedDate': json['added_circulated_or_authorised_date'] == null ? undefined : (new Date(json['added_circulated_or_authorised_date'])),
        'transactionSubCode': json['transaction_sub_code'] == null ? undefined : json['transaction_sub_code'],
        'settledIndicator': json['settled_indicator'] == null ? undefined : json['settled_indicator'],
        'claimLineNumber': json['claim_line_number'] == null ? undefined : json['claim_line_number'],
        'leadClaimReference': json['lead_claim_reference'] == null ? undefined : json['lead_claim_reference'],
        'claimStatus': json['claim_status'] == null ? undefined : json['claim_status'],
        'lossDateQualifier': json['loss_date_qualifier'] == null ? undefined : json['loss_date_qualifier'],
        'lossStartDate': json['loss_start_date'] == null ? undefined : (new Date(json['loss_start_date'])),
        'lossEndDate': json['loss_end_date'] == null ? undefined : (new Date(json['loss_end_date'])),
        'claimType': json['claim_type'] == null ? undefined : json['claim_type'],
        'claimsScheme': json['claims_scheme'] == null ? undefined : json['claims_scheme'],
        'ecfIndicator': json['ecf_indicator'] == null ? undefined : json['ecf_indicator'],
        'pbsIndicator': json['pbs_indicator'] == null ? undefined : json['pbs_indicator'],
        'triageCategory': json['triage_category'] == null ? undefined : json['triage_category'],
        'parallelUcrs': json['parallel_ucrs'] == null ? undefined : json['parallel_ucrs'],
        'brokerClaimReference1': json['broker_claim_reference1'] == null ? undefined : json['broker_claim_reference1'],
        'warIndicator': json['war_indicator'] == null ? undefined : json['war_indicator'],
        'simultaneousReinstatementRequired': json['simultaneous_reinstatement_required'] == null ? undefined : json['simultaneous_reinstatement_required'],
        'xcsToAgreeIndicator': json['xcs_to_agree_indicator'] == null ? undefined : json['xcs_to_agree_indicator'],
        'conflictOfInterestIndicator': json['conflict_of_interest_indicator'] == null ? undefined : json['conflict_of_interest_indicator'],
        'classOfBusiness': json['class_of_business'] == null ? undefined : json['class_of_business'],
        'softWarnings': json['soft_warnings'] == null ? undefined : json['soft_warnings'],
        'transactionError': json['transaction_error'] == null ? undefined : json['transaction_error'],
        'additionalInformation': json['additional_information'] == null ? undefined : json['additional_information'],
        'transactionSequence': json['transaction_sequence'] == null ? undefined : json['transaction_sequence'],
        'isDeleted': json['is_deleted'] == null ? undefined : json['is_deleted'],
    };
}

export function ClaimTransactionUpdateToJSON(value?: ClaimTransactionUpdate | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'service_provider_reference': value['serviceProviderReference'],
        'creation_date': value['creationDate'] == null ? undefined : ((value['creationDate'] as any).toISOString()),
        'message_sequence_number': value['messageSequenceNumber'],
        'explanation': value['explanation'],
        'claim_advice_indicator': value['claimAdviceIndicator'],
        'advised_to_leading_reinsurer_date': value['advisedToLeadingReinsurerDate'] == null ? undefined : ((value['advisedToLeadingReinsurerDate'] as any).toISOString()),
        'as_of_date': value['asOfDate'] == null ? undefined : ((value['asOfDate'] as any).toISOString()),
        'action_participant_type': value['actionParticipantType'],
        'action_participant': value['actionParticipant'],
        'response_code': value['responseCode'],
        'transaction_reference': value['transactionReference'],
        'ucr': value['ucr'],
        'umr': value['umr'],
        'insurer_risk_reference': value['insurerRiskReference'],
        'insurer_risk_reference2': value['insurerRiskReference2'],
        'loss_or_event_name': value['lossOrEventName'],
        'vessel_name': value['vesselName'],
        'pcs_reference': value['pcsReference'],
        'lco_catastrophe_reference': value['lcoCatastropheReference'],
        'service_provider_claim_ref': value['serviceProviderClaimRef'],
        'cause_of_loss': value['causeOfLoss'],
        'loss_location': value['lossLocation'],
        'loss_details': value['lossDetails'],
        'loss_date_narrative': value['lossDateNarrative'],
        'adjuster_name': value['adjusterName'],
        'adjuster_reference': value['adjusterReference'],
        'lawyer_name': value['lawyerName'],
        'lawyer_reference': value['lawyerReference'],
        'cover_type': value['coverType'],
        'insured_risk_or_interest_description': value['insuredRiskOrInterestDescription'],
        'contract_period_start_date': value['contractPeriodStartDate'] == null ? undefined : ((value['contractPeriodStartDate'] as any).toISOString().substring(0,10)),
        'contract_period_end_date': value['contractPeriodEndDate'] == null ? undefined : ((value['contractPeriodEndDate'] as any).toISOString().substring(0,10)),
        'underwriting_year': value['underwritingYear'],
        'contract_period_description': value['contractPeriodDescription'],
        'insurer_share_percentage': value['insurerSharePercentage'],
        'lloyds_status': value['lloydsStatus'],
        'sub_classification': value['subClassification'],
        'broker_advised_date': value['brokerAdvisedDate'] == null ? undefined : ((value['brokerAdvisedDate'] as any).toISOString().substring(0,10)),
        'added_circulated_or_authorised_date': value['addedCirculatedOrAuthorisedDate'] == null ? undefined : ((value['addedCirculatedOrAuthorisedDate'] as any).toISOString().substring(0,10)),
        'transaction_sub_code': value['transactionSubCode'],
        'settled_indicator': value['settledIndicator'],
        'claim_line_number': value['claimLineNumber'],
        'lead_claim_reference': value['leadClaimReference'],
        'claim_status': value['claimStatus'],
        'loss_date_qualifier': value['lossDateQualifier'],
        'loss_start_date': value['lossStartDate'] == null ? undefined : ((value['lossStartDate'] as any).toISOString().substring(0,10)),
        'loss_end_date': value['lossEndDate'] == null ? undefined : ((value['lossEndDate'] as any).toISOString().substring(0,10)),
        'claim_type': value['claimType'],
        'claims_scheme': value['claimsScheme'],
        'ecf_indicator': value['ecfIndicator'],
        'pbs_indicator': value['pbsIndicator'],
        'triage_category': value['triageCategory'],
        'parallel_ucrs': value['parallelUcrs'],
        'broker_claim_reference1': value['brokerClaimReference1'],
        'war_indicator': value['warIndicator'],
        'simultaneous_reinstatement_required': value['simultaneousReinstatementRequired'],
        'xcs_to_agree_indicator': value['xcsToAgreeIndicator'],
        'conflict_of_interest_indicator': value['conflictOfInterestIndicator'],
        'class_of_business': value['classOfBusiness'],
        'soft_warnings': value['softWarnings'],
        'transaction_error': value['transactionError'],
        'additional_information': value['additionalInformation'],
        'transaction_sequence': value['transactionSequence'],
        'is_deleted': value['isDeleted'],
    };
}

