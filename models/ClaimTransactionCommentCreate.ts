/* tslint:disable */
/* eslint-disable */
/**
 * Claims API
 * API for managing insurance claims and ECF transactions.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Data required to create a new transaction comment
 * @export
 * @interface ClaimTransactionCommentCreate
 */
export interface ClaimTransactionCommentCreate {
    /**
     * Type of comment determining visibility and limits
     * @type {string}
     * @memberof ClaimTransactionCommentCreate
     */
    commentType: ClaimTransactionCommentCreateCommentTypeEnum;
    /**
     * Line number for ordering comments of the same type
     * @type {number}
     * @memberof ClaimTransactionCommentCreate
     */
    lineNumber: number;
    /**
     * The actual comment text (max 70 characters per ECF spec)
     * @type {string}
     * @memberof ClaimTransactionCommentCreate
     */
    commentDetails: string;
    /**
     * Additional metadata or cross-market comment data
     * @type {{ [key: string]: any; }}
     * @memberof ClaimTransactionCommentCreate
     */
    additionalInformation?: { [key: string]: any; };
}


/**
 * @export
 */
export const ClaimTransactionCommentCreateCommentTypeEnum = {
    Broker: 'broker',
    Private: 'private',
    Public: 'public',
    CrossMarket: 'cross_market'
} as const;
export type ClaimTransactionCommentCreateCommentTypeEnum = typeof ClaimTransactionCommentCreateCommentTypeEnum[keyof typeof ClaimTransactionCommentCreateCommentTypeEnum];


/**
 * Check if a given object implements the ClaimTransactionCommentCreate interface.
 */
export function instanceOfClaimTransactionCommentCreate(value: object): boolean {
    if (!('commentType' in value)) return false;
    if (!('lineNumber' in value)) return false;
    if (!('commentDetails' in value)) return false;
    return true;
}

export function ClaimTransactionCommentCreateFromJSON(json: any): ClaimTransactionCommentCreate {
    return ClaimTransactionCommentCreateFromJSONTyped(json, false);
}

export function ClaimTransactionCommentCreateFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClaimTransactionCommentCreate {
    if (json == null) {
        return json;
    }
    return {
        
        'commentType': json['comment_type'],
        'lineNumber': json['line_number'],
        'commentDetails': json['comment_details'],
        'additionalInformation': json['additional_information'] == null ? undefined : json['additional_information'],
    };
}

export function ClaimTransactionCommentCreateToJSON(value?: ClaimTransactionCommentCreate | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'comment_type': value['commentType'],
        'line_number': value['lineNumber'],
        'comment_details': value['commentDetails'],
        'additional_information': value['additionalInformation'],
    };
}

