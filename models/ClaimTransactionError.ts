/* tslint:disable */
/* eslint-disable */
/**
 * Claims API
 * API for managing insurance claims and ECF transactions.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ClaimTransactionError
 */
export interface ClaimTransactionError {
    /**
     * 
     * @type {string}
     * @memberof ClaimTransactionError
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof ClaimTransactionError
     */
    transactionId: string;
    /**
     * Error or warning level code (e.g., 002)
     * @type {string}
     * @memberof ClaimTransactionError
     */
    errorWarningLevel: string;
    /**
     * ECF error code (e.g., U124)
     * @type {string}
     * @memberof ClaimTransactionError
     */
    errorCode: string;
    /**
     * Human-readable error description
     * @type {string}
     * @memberof ClaimTransactionError
     */
    errorDescription: string;
    /**
     * 
     * @type {Date}
     * @memberof ClaimTransactionError
     */
    createdAt: Date;
}

/**
 * Check if a given object implements the ClaimTransactionError interface.
 */
export function instanceOfClaimTransactionError(value: object): boolean {
    if (!('id' in value)) return false;
    if (!('transactionId' in value)) return false;
    if (!('errorWarningLevel' in value)) return false;
    if (!('errorCode' in value)) return false;
    if (!('errorDescription' in value)) return false;
    if (!('createdAt' in value)) return false;
    return true;
}

export function ClaimTransactionErrorFromJSON(json: any): ClaimTransactionError {
    return ClaimTransactionErrorFromJSONTyped(json, false);
}

export function ClaimTransactionErrorFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClaimTransactionError {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'transactionId': json['transaction_id'],
        'errorWarningLevel': json['error_warning_level'],
        'errorCode': json['error_code'],
        'errorDescription': json['error_description'],
        'createdAt': (new Date(json['created_at'])),
    };
}

export function ClaimTransactionErrorToJSON(value?: ClaimTransactionError | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'transaction_id': value['transactionId'],
        'error_warning_level': value['errorWarningLevel'],
        'error_code': value['errorCode'],
        'error_description': value['errorDescription'],
        'created_at': ((value['createdAt']).toISOString()),
    };
}

