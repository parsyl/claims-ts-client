/* tslint:disable */
/* eslint-disable */
/**
 * Claims API
 * API for managing insurance claims and ECF transactions.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ThirdPartyEntityUpdate
 */
export interface ThirdPartyEntityUpdate {
    /**
     * Type of third party entity
     * @type {string}
     * @memberof ThirdPartyEntityUpdate
     */
    entityType?: ThirdPartyEntityUpdateEntityTypeEnum;
    /**
     * Name of the third party entity
     * @type {string}
     * @memberof ThirdPartyEntityUpdate
     */
    name?: string;
    /**
     * Reference identifier for the third party entity
     * @type {string}
     * @memberof ThirdPartyEntityUpdate
     */
    reference?: string;
}


/**
 * @export
 */
export const ThirdPartyEntityUpdateEntityTypeEnum = {
    Tpa: 'tpa',
    Adjuster: 'adjuster',
    Lawyer: 'lawyer'
} as const;
export type ThirdPartyEntityUpdateEntityTypeEnum = typeof ThirdPartyEntityUpdateEntityTypeEnum[keyof typeof ThirdPartyEntityUpdateEntityTypeEnum];


/**
 * Check if a given object implements the ThirdPartyEntityUpdate interface.
 */
export function instanceOfThirdPartyEntityUpdate(value: object): boolean {
    return true;
}

export function ThirdPartyEntityUpdateFromJSON(json: any): ThirdPartyEntityUpdate {
    return ThirdPartyEntityUpdateFromJSONTyped(json, false);
}

export function ThirdPartyEntityUpdateFromJSONTyped(json: any, ignoreDiscriminator: boolean): ThirdPartyEntityUpdate {
    if (json == null) {
        return json;
    }
    return {
        
        'entityType': json['entity_type'] == null ? undefined : json['entity_type'],
        'name': json['name'] == null ? undefined : json['name'],
        'reference': json['reference'] == null ? undefined : json['reference'],
    };
}

export function ThirdPartyEntityUpdateToJSON(value?: ThirdPartyEntityUpdate | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'entity_type': value['entityType'],
        'name': value['name'],
        'reference': value['reference'],
    };
}

