/* tslint:disable */
/* eslint-disable */
/**
 * Claims API
 * API for managing insurance claims and ECF transactions.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ClaimTransactionInsurer
 */
export interface ClaimTransactionInsurer {
    /**
     * 
     * @type {string}
     * @memberof ClaimTransactionInsurer
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof ClaimTransactionInsurer
     */
    contractMarketId: string;
    /**
     * Party agency identifier (e.g., 'lloyds')
     * @type {string}
     * @memberof ClaimTransactionInsurer
     */
    partyAgency?: string;
    /**
     * Party ID text (e.g., 'urn:lloyds:1796')
     * @type {string}
     * @memberof ClaimTransactionInsurer
     */
    partyId?: string;
    /**
     * Party name (e.g., 'SYNDICATE 3000')
     * @type {string}
     * @memberof ClaimTransactionInsurer
     */
    partyName: string;
    /**
     * Contact person name
     * @type {string}
     * @memberof ClaimTransactionInsurer
     */
    contactName?: string;
    /**
     * Contact telephone number
     * @type {string}
     * @memberof ClaimTransactionInsurer
     */
    contactTelephone?: string;
    /**
     * Contact email address
     * @type {string}
     * @memberof ClaimTransactionInsurer
     */
    contactEmail?: string;
    /**
     * Type of share percentage
     * @type {string}
     * @memberof ClaimTransactionInsurer
     */
    sharePercentageType?: ClaimTransactionInsurerSharePercentageTypeEnum;
    /**
     * Share percentage rate unit
     * @type {string}
     * @memberof ClaimTransactionInsurer
     */
    sharePercentageRateUnit?: string;
    /**
     * Share percentage value
     * @type {number}
     * @memberof ClaimTransactionInsurer
     */
    insurerSharePercentageValue?: number;
    /**
     * Insurer or reinsurer claim reference 1
     * @type {string}
     * @memberof ClaimTransactionInsurer
     */
    insurerClaimReference1?: string;
    /**
     * Insurer or reinsurer claim reference 2
     * @type {string}
     * @memberof ClaimTransactionInsurer
     */
    insurerClaimReference2?: string;
    /**
     * Participant function (Lead, Agreement Party, Follower)
     * @type {string}
     * @memberof ClaimTransactionInsurer
     */
    participantFunction?: string;
    /**
     * Managing agent code
     * @type {string}
     * @memberof ClaimTransactionInsurer
     */
    managingAgentCode?: string;
    /**
     * Consortium number
     * @type {string}
     * @memberof ClaimTransactionInsurer
     */
    consortiumNumber?: string;
    /**
     * Claim line number
     * @type {number}
     * @memberof ClaimTransactionInsurer
     */
    claimLineNumber?: number;
    /**
     * 
     * @type {Date}
     * @memberof ClaimTransactionInsurer
     */
    createdAt: Date;
}


/**
 * @export
 */
export const ClaimTransactionInsurerSharePercentageTypeEnum = {
    Insurer: 'insurer',
    Reinsurer: 'reinsurer'
} as const;
export type ClaimTransactionInsurerSharePercentageTypeEnum = typeof ClaimTransactionInsurerSharePercentageTypeEnum[keyof typeof ClaimTransactionInsurerSharePercentageTypeEnum];


/**
 * Check if a given object implements the ClaimTransactionInsurer interface.
 */
export function instanceOfClaimTransactionInsurer(value: object): boolean {
    if (!('id' in value)) return false;
    if (!('contractMarketId' in value)) return false;
    if (!('partyName' in value)) return false;
    if (!('createdAt' in value)) return false;
    return true;
}

export function ClaimTransactionInsurerFromJSON(json: any): ClaimTransactionInsurer {
    return ClaimTransactionInsurerFromJSONTyped(json, false);
}

export function ClaimTransactionInsurerFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClaimTransactionInsurer {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'contractMarketId': json['contract_market_id'],
        'partyAgency': json['party_agency'] == null ? undefined : json['party_agency'],
        'partyId': json['party_id'] == null ? undefined : json['party_id'],
        'partyName': json['party_name'],
        'contactName': json['contact_name'] == null ? undefined : json['contact_name'],
        'contactTelephone': json['contact_telephone'] == null ? undefined : json['contact_telephone'],
        'contactEmail': json['contact_email'] == null ? undefined : json['contact_email'],
        'sharePercentageType': json['share_percentage_type'] == null ? undefined : json['share_percentage_type'],
        'sharePercentageRateUnit': json['share_percentage_rate_unit'] == null ? undefined : json['share_percentage_rate_unit'],
        'insurerSharePercentageValue': json['insurer_share_percentage_value'] == null ? undefined : json['insurer_share_percentage_value'],
        'insurerClaimReference1': json['insurer_claim_reference1'] == null ? undefined : json['insurer_claim_reference1'],
        'insurerClaimReference2': json['insurer_claim_reference2'] == null ? undefined : json['insurer_claim_reference2'],
        'participantFunction': json['participant_function'] == null ? undefined : json['participant_function'],
        'managingAgentCode': json['managing_agent_code'] == null ? undefined : json['managing_agent_code'],
        'consortiumNumber': json['consortium_number'] == null ? undefined : json['consortium_number'],
        'claimLineNumber': json['claim_line_number'] == null ? undefined : json['claim_line_number'],
        'createdAt': (new Date(json['created_at'])),
    };
}

export function ClaimTransactionInsurerToJSON(value?: ClaimTransactionInsurer | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'contract_market_id': value['contractMarketId'],
        'party_agency': value['partyAgency'],
        'party_id': value['partyId'],
        'party_name': value['partyName'],
        'contact_name': value['contactName'],
        'contact_telephone': value['contactTelephone'],
        'contact_email': value['contactEmail'],
        'share_percentage_type': value['sharePercentageType'],
        'share_percentage_rate_unit': value['sharePercentageRateUnit'],
        'insurer_share_percentage_value': value['insurerSharePercentageValue'],
        'insurer_claim_reference1': value['insurerClaimReference1'],
        'insurer_claim_reference2': value['insurerClaimReference2'],
        'participant_function': value['participantFunction'],
        'managing_agent_code': value['managingAgentCode'],
        'consortium_number': value['consortiumNumber'],
        'claim_line_number': value['claimLineNumber'],
        'created_at': ((value['createdAt']).toISOString()),
    };
}

