/* tslint:disable */
/* eslint-disable */
/**
 * Claims API
 * API for managing insurance claims and ECF transactions.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ClaimTransactionInsurer } from './ClaimTransactionInsurer';
import {
    ClaimTransactionInsurerFromJSON,
    ClaimTransactionInsurerFromJSONTyped,
    ClaimTransactionInsurerToJSON,
} from './ClaimTransactionInsurer';

/**
 * 
 * @export
 * @interface ClaimTransactionContractMarket
 */
export interface ClaimTransactionContractMarket {
    /**
     * 
     * @type {string}
     * @memberof ClaimTransactionContractMarket
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof ClaimTransactionContractMarket
     */
    transactionId: string;
    /**
     * Agency identifier
     * @type {string}
     * @memberof ClaimTransactionContractMarket
     */
    agency: string;
    /**
     * 
     * @type {Date}
     * @memberof ClaimTransactionContractMarket
     */
    createdAt: Date;
    /**
     * List of insurers/reinsurers in this contract market
     * @type {Array<ClaimTransactionInsurer>}
     * @memberof ClaimTransactionContractMarket
     */
    insurers?: Array<ClaimTransactionInsurer>;
}

/**
 * Check if a given object implements the ClaimTransactionContractMarket interface.
 */
export function instanceOfClaimTransactionContractMarket(value: object): boolean {
    if (!('id' in value)) return false;
    if (!('transactionId' in value)) return false;
    if (!('agency' in value)) return false;
    if (!('createdAt' in value)) return false;
    return true;
}

export function ClaimTransactionContractMarketFromJSON(json: any): ClaimTransactionContractMarket {
    return ClaimTransactionContractMarketFromJSONTyped(json, false);
}

export function ClaimTransactionContractMarketFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClaimTransactionContractMarket {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'transactionId': json['transaction_id'],
        'agency': json['agency'],
        'createdAt': (new Date(json['created_at'])),
        'insurers': json['insurers'] == null ? undefined : ((json['insurers'] as Array<any>).map(ClaimTransactionInsurerFromJSON)),
    };
}

export function ClaimTransactionContractMarketToJSON(value?: ClaimTransactionContractMarket | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'transaction_id': value['transactionId'],
        'agency': value['agency'],
        'created_at': ((value['createdAt']).toISOString()),
        'insurers': value['insurers'] == null ? undefined : ((value['insurers'] as Array<any>).map(ClaimTransactionInsurerToJSON)),
    };
}

