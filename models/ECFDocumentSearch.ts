/* tslint:disable */
/* eslint-disable */
/**
 * Claims API
 * API for managing insurance claims and ECF transactions.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ECFDocumentSearchSearchCriteria } from './ECFDocumentSearchSearchCriteria';
import {
    ECFDocumentSearchSearchCriteriaFromJSON,
    ECFDocumentSearchSearchCriteriaFromJSONTyped,
    ECFDocumentSearchSearchCriteriaToJSON,
} from './ECFDocumentSearchSearchCriteria';

/**
 * 
 * @export
 * @interface ECFDocumentSearch
 */
export interface ECFDocumentSearch {
    /**
     * UMR - Unique Market Reference
     * @type {string}
     * @memberof ECFDocumentSearch
     */
    brokerPolicyReference: string;
    /**
     * UCR - Unique Claim Reference
     * @type {string}
     * @memberof ECFDocumentSearch
     */
    brokerClaimReference: string;
    /**
     * TR - Transaction Reference (optional)
     * @type {string}
     * @memberof ECFDocumentSearch
     */
    transactionReference?: string;
    /**
     * Internal policy identifier (optional)
     * @type {string}
     * @memberof ECFDocumentSearch
     */
    insurerPolicyReference?: string;
    /**
     * 
     * @type {ECFDocumentSearchSearchCriteria}
     * @memberof ECFDocumentSearch
     */
    searchCriteria: ECFDocumentSearchSearchCriteria;
}

/**
 * Check if a given object implements the ECFDocumentSearch interface.
 */
export function instanceOfECFDocumentSearch(value: object): boolean {
    if (!('brokerPolicyReference' in value)) return false;
    if (!('brokerClaimReference' in value)) return false;
    if (!('searchCriteria' in value)) return false;
    return true;
}

export function ECFDocumentSearchFromJSON(json: any): ECFDocumentSearch {
    return ECFDocumentSearchFromJSONTyped(json, false);
}

export function ECFDocumentSearchFromJSONTyped(json: any, ignoreDiscriminator: boolean): ECFDocumentSearch {
    if (json == null) {
        return json;
    }
    return {
        
        'brokerPolicyReference': json['brokerPolicyReference'],
        'brokerClaimReference': json['brokerClaimReference'],
        'transactionReference': json['transactionReference'] == null ? undefined : json['transactionReference'],
        'insurerPolicyReference': json['insurerPolicyReference'] == null ? undefined : json['insurerPolicyReference'],
        'searchCriteria': ECFDocumentSearchSearchCriteriaFromJSON(json['searchCriteria']),
    };
}

export function ECFDocumentSearchToJSON(value?: ECFDocumentSearch | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'brokerPolicyReference': value['brokerPolicyReference'],
        'brokerClaimReference': value['brokerClaimReference'],
        'transactionReference': value['transactionReference'],
        'insurerPolicyReference': value['insurerPolicyReference'],
        'searchCriteria': ECFDocumentSearchSearchCriteriaToJSON(value['searchCriteria']),
    };
}

