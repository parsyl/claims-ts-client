/* tslint:disable */
/* eslint-disable */
/**
 * Claims API
 * API for managing insurance claims and ECF transactions.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ECFDocumentUploadDocumentInfo } from './ECFDocumentUploadDocumentInfo';
import {
    ECFDocumentUploadDocumentInfoFromJSON,
    ECFDocumentUploadDocumentInfoFromJSONTyped,
    ECFDocumentUploadDocumentInfoToJSON,
} from './ECFDocumentUploadDocumentInfo';

/**
 * 
 * @export
 * @interface ECFDocumentUpload
 */
export interface ECFDocumentUpload {
    /**
     * 
     * @type {ECFDocumentUploadDocumentInfo}
     * @memberof ECFDocumentUpload
     */
    documentInfo: ECFDocumentUploadDocumentInfo;
    /**
     * UMR - Unique Market Reference
     * @type {string}
     * @memberof ECFDocumentUpload
     */
    brokerPolicyReference: string;
    /**
     * UCR - Unique Claim Reference
     * @type {string}
     * @memberof ECFDocumentUpload
     */
    brokerClaimReference: string;
    /**
     * TR - Transaction Reference (optional)
     * @type {string}
     * @memberof ECFDocumentUpload
     */
    transactionReference?: string;
    /**
     * Whether broker will have access to document (default false)
     * @type {string}
     * @memberof ECFDocumentUpload
     */
    isPublic?: string;
}

/**
 * Check if a given object implements the ECFDocumentUpload interface.
 */
export function instanceOfECFDocumentUpload(value: object): boolean {
    if (!('documentInfo' in value)) return false;
    if (!('brokerPolicyReference' in value)) return false;
    if (!('brokerClaimReference' in value)) return false;
    return true;
}

export function ECFDocumentUploadFromJSON(json: any): ECFDocumentUpload {
    return ECFDocumentUploadFromJSONTyped(json, false);
}

export function ECFDocumentUploadFromJSONTyped(json: any, ignoreDiscriminator: boolean): ECFDocumentUpload {
    if (json == null) {
        return json;
    }
    return {
        
        'documentInfo': ECFDocumentUploadDocumentInfoFromJSON(json['documentInfo']),
        'brokerPolicyReference': json['brokerPolicyReference'],
        'brokerClaimReference': json['brokerClaimReference'],
        'transactionReference': json['transactionReference'] == null ? undefined : json['transactionReference'],
        'isPublic': json['isPublic'] == null ? undefined : json['isPublic'],
    };
}

export function ECFDocumentUploadToJSON(value?: ECFDocumentUpload | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'documentInfo': ECFDocumentUploadDocumentInfoToJSON(value['documentInfo']),
        'brokerPolicyReference': value['brokerPolicyReference'],
        'brokerClaimReference': value['brokerClaimReference'],
        'transactionReference': value['transactionReference'],
        'isPublic': value['isPublic'],
    };
}

