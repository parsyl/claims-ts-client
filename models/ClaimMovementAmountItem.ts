/* tslint:disable */
/* eslint-disable */
/**
 * Claims API
 * API for managing insurance claims and ECF transactions.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ClaimMovementAmountItem
 */
export interface ClaimMovementAmountItem {
    /**
     * 
     * @type {string}
     * @memberof ClaimMovementAmountItem
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof ClaimMovementAmountItem
     */
    financialAmountsId: string;
    /**
     * Amount item type (e.g., Lead_Reserve_Amount, Vat_Amount)
     * @type {string}
     * @memberof ClaimMovementAmountItem
     */
    type: string;
    /**
     * ISO currency code for this amount
     * @type {string}
     * @memberof ClaimMovementAmountItem
     */
    amountCurrency: string;
    /**
     * Amount share (e.g., hundred_percent)
     * @type {string}
     * @memberof ClaimMovementAmountItem
     */
    amountShare?: string;
    /**
     * Amount currency indicator (e.g., reference_currency)
     * @type {string}
     * @memberof ClaimMovementAmountItem
     */
    amountCurrencyIndicator?: string;
    /**
     * The actual amount value
     * @type {number}
     * @memberof ClaimMovementAmountItem
     */
    amountValue: number;
    /**
     * 
     * @type {Date}
     * @memberof ClaimMovementAmountItem
     */
    createdAt: Date;
}

/**
 * Check if a given object implements the ClaimMovementAmountItem interface.
 */
export function instanceOfClaimMovementAmountItem(value: object): boolean {
    if (!('id' in value)) return false;
    if (!('financialAmountsId' in value)) return false;
    if (!('type' in value)) return false;
    if (!('amountCurrency' in value)) return false;
    if (!('amountValue' in value)) return false;
    if (!('createdAt' in value)) return false;
    return true;
}

export function ClaimMovementAmountItemFromJSON(json: any): ClaimMovementAmountItem {
    return ClaimMovementAmountItemFromJSONTyped(json, false);
}

export function ClaimMovementAmountItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClaimMovementAmountItem {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'financialAmountsId': json['financial_amounts_id'],
        'type': json['type'],
        'amountCurrency': json['amount_currency'],
        'amountShare': json['amount_share'] == null ? undefined : json['amount_share'],
        'amountCurrencyIndicator': json['amount_currency_indicator'] == null ? undefined : json['amount_currency_indicator'],
        'amountValue': json['amount_value'],
        'createdAt': (new Date(json['created_at'])),
    };
}

export function ClaimMovementAmountItemToJSON(value?: ClaimMovementAmountItem | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'financial_amounts_id': value['financialAmountsId'],
        'type': value['type'],
        'amount_currency': value['amountCurrency'],
        'amount_share': value['amountShare'],
        'amount_currency_indicator': value['amountCurrencyIndicator'],
        'amount_value': value['amountValue'],
        'created_at': ((value['createdAt']).toISOString()),
    };
}

