/* tslint:disable */
/* eslint-disable */
/**
 * Claims API
 * API for managing insurance claims and ECF transactions.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DocumentSource } from './DocumentSource';
import {
    DocumentSourceFromJSON,
    DocumentSourceFromJSONTyped,
    DocumentSourceToJSON,
} from './DocumentSource';

/**
 * 
 * @export
 * @interface ClaimDocumentPatch
 */
export interface ClaimDocumentPatch {
    /**
     * Name of the document file
     * @type {string}
     * @memberof ClaimDocumentPatch
     */
    fileName?: string;
    /**
     * MIME type of the document
     * @type {string}
     * @memberof ClaimDocumentPatch
     */
    contentType?: string;
    /**
     * Description of the document
     * @type {string}
     * @memberof ClaimDocumentPatch
     */
    description?: string;
    /**
     * Type of document
     * @type {string}
     * @memberof ClaimDocumentPatch
     */
    documentType?: ClaimDocumentPatchDocumentTypeEnum;
    /**
     * 
     * @type {DocumentSource}
     * @memberof ClaimDocumentPatch
     */
    documentSource?: DocumentSource;
    /**
     * Version number of the document
     * @type {number}
     * @memberof ClaimDocumentPatch
     */
    documentVersion?: number;
    /**
     * S3 key for the document
     * @type {string}
     * @memberof ClaimDocumentPatch
     */
    s3Key?: string;
    /**
     * S3 bucket for the document
     * @type {string}
     * @memberof ClaimDocumentPatch
     */
    s3Bucket?: string;
    /**
     * Size of the file in bytes
     * @type {number}
     * @memberof ClaimDocumentPatch
     */
    fileSizeBytes?: number;
}


/**
 * @export
 */
export const ClaimDocumentPatchDocumentTypeEnum = {
    Policy: 'policy',
    Claim: 'claim',
    ProofOfLoss: 'proof_of_loss',
    Correspondence: 'correspondence',
    Invoice: 'invoice',
    Receipt: 'receipt',
    Photo: 'photo',
    Report: 'report',
    Document: 'document',
    Other: 'other'
} as const;
export type ClaimDocumentPatchDocumentTypeEnum = typeof ClaimDocumentPatchDocumentTypeEnum[keyof typeof ClaimDocumentPatchDocumentTypeEnum];


/**
 * Check if a given object implements the ClaimDocumentPatch interface.
 */
export function instanceOfClaimDocumentPatch(value: object): boolean {
    return true;
}

export function ClaimDocumentPatchFromJSON(json: any): ClaimDocumentPatch {
    return ClaimDocumentPatchFromJSONTyped(json, false);
}

export function ClaimDocumentPatchFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClaimDocumentPatch {
    if (json == null) {
        return json;
    }
    return {
        
        'fileName': json['file_name'] == null ? undefined : json['file_name'],
        'contentType': json['content_type'] == null ? undefined : json['content_type'],
        'description': json['description'] == null ? undefined : json['description'],
        'documentType': json['document_type'] == null ? undefined : json['document_type'],
        'documentSource': json['document_source'] == null ? undefined : DocumentSourceFromJSON(json['document_source']),
        'documentVersion': json['document_version'] == null ? undefined : json['document_version'],
        's3Key': json['s3_key'] == null ? undefined : json['s3_key'],
        's3Bucket': json['s3_bucket'] == null ? undefined : json['s3_bucket'],
        'fileSizeBytes': json['file_size_bytes'] == null ? undefined : json['file_size_bytes'],
    };
}

export function ClaimDocumentPatchToJSON(value?: ClaimDocumentPatch | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'file_name': value['fileName'],
        'content_type': value['contentType'],
        'description': value['description'],
        'document_type': value['documentType'],
        'document_source': DocumentSourceToJSON(value['documentSource']),
        'document_version': value['documentVersion'],
        's3_key': value['s3Key'],
        's3_bucket': value['s3Bucket'],
        'file_size_bytes': value['fileSizeBytes'],
    };
}

