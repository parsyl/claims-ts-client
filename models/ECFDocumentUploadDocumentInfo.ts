/* tslint:disable */
/* eslint-disable */
/**
 * Claims API
 * API for managing insurance claims and ECF transactions.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ECFDocumentUploadDocumentInfo
 */
export interface ECFDocumentUploadDocumentInfo {
    /**
     * Parsyl internal document identifier
     * @type {string}
     * @memberof ECFDocumentUploadDocumentInfo
     */
    id: string;
    /**
     * Document name
     * @type {string}
     * @memberof ECFDocumentUploadDocumentInfo
     */
    name: string;
    /**
     * Document size in bytes
     * @type {number}
     * @memberof ECFDocumentUploadDocumentInfo
     */
    sizeBytes: number;
    /**
     * S3 bucket containing the document
     * @type {string}
     * @memberof ECFDocumentUploadDocumentInfo
     */
    s3Bucket: string;
    /**
     * S3 key for the document
     * @type {string}
     * @memberof ECFDocumentUploadDocumentInfo
     */
    s3Key: string;
    /**
     * Type of insurance document - defaults to generic 'document'
     * @type {string}
     * @memberof ECFDocumentUploadDocumentInfo
     */
    type?: string;
    /**
     * MIME type identifier defined by RFC 2045 section 5.1
     * @type {string}
     * @memberof ECFDocumentUploadDocumentInfo
     */
    mimeType?: string;
}

/**
 * Check if a given object implements the ECFDocumentUploadDocumentInfo interface.
 */
export function instanceOfECFDocumentUploadDocumentInfo(value: object): boolean {
    if (!('id' in value)) return false;
    if (!('name' in value)) return false;
    if (!('sizeBytes' in value)) return false;
    if (!('s3Bucket' in value)) return false;
    if (!('s3Key' in value)) return false;
    return true;
}

export function ECFDocumentUploadDocumentInfoFromJSON(json: any): ECFDocumentUploadDocumentInfo {
    return ECFDocumentUploadDocumentInfoFromJSONTyped(json, false);
}

export function ECFDocumentUploadDocumentInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ECFDocumentUploadDocumentInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'sizeBytes': json['sizeBytes'],
        's3Bucket': json['s3Bucket'],
        's3Key': json['s3Key'],
        'type': json['type'] == null ? undefined : json['type'],
        'mimeType': json['mimeType'] == null ? undefined : json['mimeType'],
    };
}

export function ECFDocumentUploadDocumentInfoToJSON(value?: ECFDocumentUploadDocumentInfo | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'name': value['name'],
        'sizeBytes': value['sizeBytes'],
        's3Bucket': value['s3Bucket'],
        's3Key': value['s3Key'],
        'type': value['type'],
        'mimeType': value['mimeType'],
    };
}

